/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Data_Access_Object.BookCategorieDao;
import Data_Access_Object.BookDao;
import Model.Book;
import Model.BookCategorie;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.sql.Date;
import java.text.MessageFormat;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import Presentation.OperationForm;

/**
 *
 * @author root
 */
public class BookForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form BookForm
     */
    DefaultTableModel model;
    DefaultTableModel model2;
    BookCategorieDao bookCategorieDao;
    BookCategorie bookCategorie;
    BookDao bookDao;
    Book book;
    OperationForm operation;

    public BookForm() {
        initComponents();
        model = (DefaultTableModel) bookCategorieTable.getModel();
        model2 = (DefaultTableModel) BookTable.getModel();
        bookCategorieDao = new BookCategorieDao();
        bookCategorie = new BookCategorie();
        bookDao = new BookDao();
        book = new Book();
        populateTableBookCategorie();
        populateTableBook();
        populateComboBox();
        operation = new OperationForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTableBookCategorie() {
        List<BookCategorie> bookCategories = new ArrayList<>();

        //  bookCategories = bookCategorieDao.listCategorie();
        bookCategories = bookCategorieDao.listBookCategories();

        for (BookCategorie cat : bookCategories) {
            model.insertRow(model.getRowCount(), new Object[]{
                cat.getCategorieId(),
                cat.getCategorieName()
            });
        }
    }

    public void populateComboBox() {
        BookCategorieDao obj = new BookCategorieDao();
        List<BookCategorie> bookCategoriess = new ArrayList<>();
        bookCategoriess = obj.listBookCategories();
        for (BookCategorie book : bookCategoriess) {
            bookCategoriesComboBox.addItem(String.valueOf(book.getCategorieName()));
        }

    }

    public void populateTableBook() {
        List<Book> books = new ArrayList<>();
        books = bookDao.listBook();
        for (Book obj : books) {
            model2.insertRow(model2.getRowCount(), new Object[]{
                obj.getBookId(),
                obj.getTitle(),
                obj.getPublicationHouse(),
                obj.getDateOfPublication(),
                obj.getAuthor(),
                obj.getPage(),
                obj.getBookcategorie()
            });
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtBookId = new javax.swing.JTextField();
        txtBookPage = new javax.swing.JTextField();
        txtBookTitle = new javax.swing.JTextField();
        txtBookDateOfPublicatio = new javax.swing.JTextField();
        txtBookPublicationHouse = new javax.swing.JTextField();
        txtBooAthor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bookCategoriesComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnClearTextFiliedBookForm = new javax.swing.JButton();
        btnDeleteBook = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        btnSaveBook = new javax.swing.JButton();
        uploadBtnBook = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BtnExportPdfBook = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCategorieId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCategorieName = new javax.swing.JTextField();
        btnSaveCategorie = new javax.swing.JButton();
        btnClearCategorieTextFilied = new javax.swing.JButton();
        btnDeleteCategorie = new javax.swing.JButton();
        btnUpdateCategorie = new javax.swing.JButton();
        uploadBtnBookCategorie = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnExportPdfBookCategorie = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookCategorieTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Book ID :");

        jLabel2.setText("Title :");

        jLabel3.setText("Date of Publication :");

        jLabel4.setText("Publication House :");

        jLabel5.setText("Page :");

        jLabel6.setText("Athor : ");

        jLabel7.setText("Book Categorie : ");

        jLabel10.setText("YYYY-MM-DD");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBookId, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(txtBookDateOfPublicatio)
                            .addComponent(txtBookTitle)
                            .addComponent(txtBookPublicationHouse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBookPage, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(txtBooAthor)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(bookCategoriesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(94, 94, 94))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(392, 392, 392)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBooAthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBookPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBookPublicationHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(17, 17, 17)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBookDateOfPublicatio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(bookCategoriesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        BookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Title", "Publication House ", "Date Of Publication", "Athor", "Page", "Book Categorie"
            }
        ));
        BookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookTable);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnClearTextFiliedBookForm.setText("Clear");
        btnClearTextFiliedBookForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTextFiliedBookFormActionPerformed(evt);
            }
        });

        btnDeleteBook.setText("Delete");
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        btnUpdateBook.setText("Update");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });

        btnSaveBook.setText("Save");
        btnSaveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveBookActionPerformed(evt);
            }
        });

        uploadBtnBook.setText("Upload");

        jButton1.setText("Export Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BtnExportPdfBook.setText("Export PDF");
        BtnExportPdfBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExportPdfBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSaveBook)
                .addGap(36, 36, 36)
                .addComponent(btnUpdateBook)
                .addGap(72, 72, 72)
                .addComponent(btnDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnClearTextFiliedBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(uploadBtnBook)
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addGap(32, 32, 32)
                .addComponent(BtnExportPdfBook)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteBook)
                    .addComponent(btnUpdateBook)
                    .addComponent(btnSaveBook)
                    .addComponent(btnClearTextFiliedBookForm)
                    .addComponent(uploadBtnBook)
                    .addComponent(jButton1)
                    .addComponent(BtnExportPdfBook))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 175, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane2.addTab("Book", jPanel3);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setText("Categorie ID :");

        jLabel9.setText("Categorie Name :");

        btnSaveCategorie.setText("Save");
        btnSaveCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCategorieActionPerformed(evt);
            }
        });

        btnClearCategorieTextFilied.setText("Clear Text");
        btnClearCategorieTextFilied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCategorieTextFiliedActionPerformed(evt);
            }
        });

        btnDeleteCategorie.setText("Delete");
        btnDeleteCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCategorieActionPerformed(evt);
            }
        });

        btnUpdateCategorie.setText("Update");
        btnUpdateCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCategorieActionPerformed(evt);
            }
        });

        uploadBtnBookCategorie.setText("Upload");
        uploadBtnBookCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnBookCategorieActionPerformed(evt);
            }
        });

        jButton3.setText("Export Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnExportPdfBookCategorie.setText("Export PDF");
        btnExportPdfBookCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPdfBookCategorieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCategorieName, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                            .addComponent(txtCategorieId))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(uploadBtnBookCategorie)
                                .addGap(18, 18, 18)
                                .addComponent(btnSaveCategorie)
                                .addGap(64, 64, 64)
                                .addComponent(btnDeleteCategorie)))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpdateCategorie)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addComponent(btnClearCategorieTextFilied, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnExportPdfBookCategorie)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCategorieId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCategorieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveCategorie)
                    .addComponent(btnClearCategorieTextFilied)
                    .addComponent(btnDeleteCategorie)
                    .addComponent(btnUpdateCategorie)
                    .addComponent(uploadBtnBookCategorie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btnExportPdfBookCategorie))
                .addGap(16, 16, 16))
        );

        bookCategorieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categorie ID", "Categorie Name"
            }
        ));
        bookCategorieTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookCategorieTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookCategorieTable);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane2.addTab("Book Categorie", jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearTextFiliedBookFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTextFiliedBookFormActionPerformed
        // TODO add your handling code here:
        txtBookId.setText(null);
        txtBookTitle.setText(null);
        txtBookPublicationHouse.setText(null);
        txtBookDateOfPublicatio.setText(null);
        txtBooAthor.setText(null);
        txtBookPage.setText(null);
        bookCategoriesComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearTextFiliedBookFormActionPerformed

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        // TODO add your handling code here:
        String bookId = txtBookId.getText();
        try {
            bookDao.delete(bookId);
            JOptionPane.showMessageDialog(null, "Deleted Successefull !!!!", "", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Book Does Not Exist !!!!", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        model2.setRowCount(0);
        populateTableBook();


    }//GEN-LAST:event_btnDeleteBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        // TODO add your handling code here:

        String bookId = txtBookId.getText();
        String title = txtBookTitle.getText();
        String publicationHouse = txtBookPublicationHouse.getText();
        Date dateOfPublication = Date.valueOf(txtBookDateOfPublicatio.getText());
        String Author = txtBooAthor.getText();
        int page = Integer.parseInt(txtBookPage.getText());
        String bookCategori = bookCategoriesComboBox.getSelectedItem().toString();
        book = new Book(bookId, title, publicationHouse, dateOfPublication, Author, page, bookCategori);
        try {
            bookDao.update(book);
            JOptionPane.showMessageDialog(null, "Updated Successefull !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed To Updte Try Again later", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        model2.setRowCount(0);
        populateTableBook();


    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void btnSaveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveBookActionPerformed
        // TODO add your handling code here:
        String bookId = txtBookId.getText();
        String title = txtBookTitle.getText();
        String publicationHouse = txtBookPublicationHouse.getText();
        Date dateOfPublication = Date.valueOf(txtBookDateOfPublicatio.getText());
        String Author = txtBooAthor.getText();
        int page = Integer.parseInt(txtBookPage.getText());
        String bookCategori = bookCategoriesComboBox.getSelectedItem().toString();

        book = new Book(bookId, title, publicationHouse, dateOfPublication, Author, page, bookCategori);
        try {
            bookDao.save(book);
            JOptionPane.showMessageDialog(null, "Saved Successefull !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Duplicate ID Try For Other !!!!", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        model2.setRowCount(0);
        populateTableBook();
        operation.populateComboBoxBookNameForCheckOut();

    }//GEN-LAST:event_btnSaveBookActionPerformed

    private void btnSaveCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCategorieActionPerformed
        // TODO add your handling code here:
        String id = txtCategorieId.getText();
        String name = txtCategorieName.getText();
        bookCategorie = new BookCategorie(id, name);       
        try{
            bookCategorieDao.save(bookCategorie);
            JOptionPane.showMessageDialog(null, "Saved Successefull !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Duplicate ID Try For Other !!!!", "Database Error", JOptionPane.ERROR_MESSAGE);
        }

        model.setRowCount(0);
        populateTableBookCategorie();
        populateComboBox();

    }//GEN-LAST:event_btnSaveCategorieActionPerformed

    private void btnClearCategorieTextFiliedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCategorieTextFiliedActionPerformed
        // TODO add your handling code here:
        txtCategorieId.setText(null);
        txtCategorieName.setText(null);
        model.setRowCount(0);
        populateTableBookCategorie();
        populateComboBox();

    }//GEN-LAST:event_btnClearCategorieTextFiliedActionPerformed

    private void btnDeleteCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCategorieActionPerformed
        // TODO add your handling code here:
        String id = txtCategorieId.getText();
        try{
            bookCategorieDao.delete(id);
            JOptionPane.showMessageDialog(null, "Delete Action Successfull !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Categorie Does Not Exist !", "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        model.setRowCount(0);
        populateTableBookCategorie();
        populateComboBox();
        


    }//GEN-LAST:event_btnDeleteCategorieActionPerformed

    private void btnUpdateCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCategorieActionPerformed
        // TODO add your handling code here:
        String id = txtCategorieId.getText();
        String name = txtCategorieName.getText();

        bookCategorie = new BookCategorie(id, name);
        bookCategorieDao.update(bookCategorie);
        try {
            model.setRowCount(0);
            JOptionPane.showMessageDialog(null, "Categorie Updeted Successfull !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Update Failed Try Again", "System Error", JOptionPane.ERROR_MESSAGE);
        }
        populateTableBookCategorie();
        populateComboBox();
    }//GEN-LAST:event_btnUpdateCategorieActionPerformed

    private void uploadBtnBookCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnBookCategorieActionPerformed
        // TODO add your handling code here:
//        JFileChooser file = new JFileChooser();
//        FileNameExtensionFilter fnef = new FileNameExtensionFilter("xlsx","xls" );
//        file.addChoosableFileFilter(fnef);
//        if(file.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
//            FileInputStream inputstrem = null;
//            try{
//                File selectedFile = file.getSelectedFile();
//                String path = selectedFile.getAbsolutePath();
//                inputstrem = new FileInputStream(path);
//            }catch(Exception ex){
//                JOptionPane.showMessageDialog(this, "File unredable");
//            }
//
//        }
    }//GEN-LAST:event_uploadBtnBookCategorieActionPerformed

    private void bookCategorieTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookCategorieTableMouseClicked
        // TODO add your handling code here:
        int row = bookCategorieTable.getSelectedRow();
        txtCategorieId.setText(model.getValueAt(row, 0).toString());
        txtCategorieName.setText(model.getValueAt(row, 1).toString());
    }//GEN-LAST:event_bookCategorieTableMouseClicked

    private void BookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookTableMouseClicked
        // TODO add your handling code here:
        int row = BookTable.getSelectedRow();
        txtBookId.setText(model2.getValueAt(row, 0).toString());
        txtBookTitle.setText(model2.getValueAt(row, 1).toString());
        txtBookPublicationHouse.setText(model2.getValueAt(row, 2).toString());
        txtBookDateOfPublicatio.setText(model2.getValueAt(row, 3).toString());
        txtBooAthor.setText(model2.getValueAt(row, 4).toString());
        txtBookPage.setText(model2.getValueAt(row, 5).toString());
        bookCategoriesComboBox.setSelectedItem(model2.getValueAt(row, 6).toString());
    }//GEN-LAST:event_BookTableMouseClicked

    private void BtnExportPdfBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExportPdfBookActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF ALL BOOK");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            BookTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_BtnExportPdfBookActionPerformed

    private void btnExportPdfBookCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPdfBookCategorieActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF BOOK CATEGORIE");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            bookCategorieTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_btnExportPdfBookCategorieActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model2.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model2.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model2.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookTable;
    private javax.swing.JButton BtnExportPdfBook;
    private javax.swing.JTable bookCategorieTable;
    private javax.swing.JComboBox bookCategoriesComboBox;
    private javax.swing.JButton btnClearCategorieTextFilied;
    private javax.swing.JButton btnClearTextFiliedBookForm;
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnDeleteCategorie;
    private javax.swing.JButton btnExportPdfBookCategorie;
    private javax.swing.JButton btnSaveBook;
    private javax.swing.JButton btnSaveCategorie;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JButton btnUpdateCategorie;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField txtBooAthor;
    private javax.swing.JTextField txtBookDateOfPublicatio;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtBookPage;
    private javax.swing.JTextField txtBookPublicationHouse;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtCategorieId;
    private javax.swing.JTextField txtCategorieName;
    private javax.swing.JButton uploadBtnBook;
    private javax.swing.JButton uploadBtnBookCategorie;
    // End of variables declaration//GEN-END:variables
}
