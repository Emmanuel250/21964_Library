/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentation;

import Data_Access_Object.BookDao;
import Data_Access_Object.CheckInDao;
import Data_Access_Object.CheckOutDao;
import Data_Access_Object.ClientDao;
import Model.Book;
import Model.Client;
import Model.ReturnedBook;
import Model.WithDrowBook;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author root
 */
public class OperationForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form OperationForm
     */
    DefaultTableModel model;
    DefaultTableModel model2;
    CheckInDao checkinDao;
    CheckOutDao checkoutDao;
    ReturnedBook retunBook;
    WithDrowBook withDrowBook;

    public OperationForm() {
        initComponents();
        populateComboBoxNameForCheckOut();
        populateComboBoxBookNameForCheckOut();
        populateComboBoxBookForCheckIn();
        populateComboBoxBookNameForCheckIn();
        model = (DefaultTableModel) CheckInTable.getModel();
        model2 = (DefaultTableModel) checkOutTable.getModel();
        retunBook = new ReturnedBook();
        checkinDao = new CheckInDao();
        withDrowBook = new WithDrowBook();
        checkoutDao = new CheckOutDao();
        populateCheckInTable();
        populateCheckOutTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateCheckInTable() {
        List<ReturnedBook> returnbooks = new ArrayList<>();
        returnbooks = checkinDao.listofReturnedBook();

        for (ReturnedBook ret : returnbooks) {
            model.insertRow(model.getRowCount(), new Object[]{
                ret.getClientName(),
                ret.getBookName(),
                ret.getStatus(),
                ret.getDates()
            });
        }
    }

    public void populateCheckOutTable() {
        List<WithDrowBook> withdrowBooks = new ArrayList<>();
        withdrowBooks = checkoutDao.listofwithdrowBook();

        for (WithDrowBook with : withdrowBooks) {
            model2.insertRow(model2.getRowCount(), new Object[]{
                with.getClientName(),
                with.getBookName(),
                with.getStatus(),
                with.getDates()
            });
        }
    }

    public void populateComboBoxNameForCheckOut() {
        ClientDao obj = new ClientDao();
        List<Client> client = new ArrayList<>();
        client = obj.ListClient();
        String names;
        for (Client cli : client) {
            names = (cli.getFirstName() + " " + cli.getLastName());
            checkOutNameComboBox.addItem(String.valueOf(names));
        }
    }

    public void populateComboBoxBookNameForCheckOut() {
        BookDao obj = new BookDao();
        List<Book> book = new ArrayList<>();
        book = obj.listBook();
        for (Book boo : book) {
            checkOutComboBoxBook.addItem(String.valueOf(boo.getBookId()));
        }
    }

    public void populateComboBoxBookNameForCheckIn() {
        checkoutDao = new CheckOutDao();
        List<WithDrowBook> withdrowClientName = new ArrayList<>();
        withdrowClientName = checkoutDao.listofwithdrowBook();
        for (WithDrowBook with : withdrowClientName) {
            checkInNameComboBox.addItem(String.valueOf(with.getClientName()));
        }
    }

    public void populateComboBoxBookForCheckIn() {
        checkoutDao = new CheckOutDao();
        List<WithDrowBook> withdrowbookName = new ArrayList<>();
        withdrowbookName = checkoutDao.listofwithdrowBook();
        for (WithDrowBook with : withdrowbookName) {
            checkInBookComboBox.addItem(String.valueOf(with.getBookName()));
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        checkInBookComboBox = new javax.swing.JComboBox<String>();
        checkInNameComboBox = new javax.swing.JComboBox<String>();
        ckeckInBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CheckInTable = new javax.swing.JTable();
        btnExportExcelCheckIn = new javax.swing.JButton();
        btnExportPDFCheckIn = new javax.swing.JButton();
        SearchBtnCheckin = new javax.swing.JButton();
        seachFieldCheckin = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        checkOutComboBoxBook = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        checkOutNameComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        checkOutTable = new javax.swing.JTable();
        checkOutBtn = new javax.swing.JButton();
        exportWithDrowBooktoexcell = new javax.swing.JButton();
        BtnExportPdfCheckOut = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        searchForcheckOut = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTabbedPane1.setAutoscrolls(true);

        jPanel1.setAutoscrolls(true);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setBackground(new java.awt.Color(35, 46, 35));
        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 48)); // NOI18N
        jLabel1.setText("CheckIn  Form");

        jLabel2.setText("Name :");

        jLabel3.setText("Book :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(68, 68, 68)
                                .addComponent(checkInBookComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkInNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(checkInNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(checkInBookComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        ckeckInBtn.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        ckeckInBtn.setText("Check In");
        ckeckInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckeckInBtnActionPerformed(evt);
            }
        });

        CheckInTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Book Name", "Status", "Date"
            }
        ));
        jScrollPane1.setViewportView(CheckInTable);

        btnExportExcelCheckIn.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        btnExportExcelCheckIn.setText("Export PDF");
        btnExportExcelCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelCheckInActionPerformed(evt);
            }
        });

        btnExportPDFCheckIn.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        btnExportPDFCheckIn.setText("Export Excel");
        btnExportPDFCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPDFCheckInActionPerformed(evt);
            }
        });

        SearchBtnCheckin.setFont(new java.awt.Font("Cantarell Extra Bold", 1, 24)); // NOI18N
        SearchBtnCheckin.setText("Search");
        SearchBtnCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnCheckinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ckeckInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnExportExcelCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportPDFCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(seachFieldCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(SearchBtnCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportExcelCheckIn)
                    .addComponent(ckeckInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportPDFCheckIn)
                    .addComponent(SearchBtnCheckin)
                    .addComponent(seachFieldCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CheckIn", jPanel1);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 48)); // NOI18N
        jLabel4.setText("CheckOut Form");

        jLabel5.setText("Name :");

        jLabel6.setText("Book :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkOutComboBoxBook, 0, 299, Short.MAX_VALUE)
                            .addComponent(checkOutNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(checkOutNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(checkOutComboBoxBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        checkOutTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Book ID", "Status", "Date"
            }
        ));
        jScrollPane2.setViewportView(checkOutTable);

        checkOutBtn.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        checkOutBtn.setText("Check Out");
        checkOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutBtnActionPerformed(evt);
            }
        });

        exportWithDrowBooktoexcell.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        exportWithDrowBooktoexcell.setText("Export Excel");
        exportWithDrowBooktoexcell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportWithDrowBooktoexcellActionPerformed(evt);
            }
        });

        BtnExportPdfCheckOut.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        BtnExportPdfCheckOut.setText("Export PDF");
        BtnExportPdfCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExportPdfCheckOutActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Cantarell Extra Bold", 1, 24)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(checkOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(exportWithDrowBooktoexcell, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)
                        .addComponent(BtnExportPdfCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(searchForcheckOut)
                        .addGap(53, 53, 53)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(checkOutBtn)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportWithDrowBooktoexcell)
                    .addComponent(BtnExportPdfCheckOut)
                    .addComponent(jButton2)
                    .addComponent(searchForcheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(checkOutBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(exportWithDrowBooktoexcell, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(BtnExportPdfCheckOut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(searchForcheckOut, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("CheckOut", jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckeckInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckeckInBtnActionPerformed
        // TODO add your handling code here:
        String client = checkInNameComboBox.getSelectedItem().toString();
        String book = checkInBookComboBox.getSelectedItem().toString();
        String status = "Student";
        String dates = new SimpleDateFormat("yyy-MM-dd").format(new Date(System.currentTimeMillis()));

        retunBook = new ReturnedBook(book, client, status, dates);

        WithDrowBook with = new WithDrowBook();        
        try{
            checkinDao.save(retunBook);
            with.setBookName(book);
            checkoutDao.delete(book);
            JOptionPane.showMessageDialog(null, "Saved To Returned Book List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Saved To Retured Book List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }

        model.setRowCount(0);
        populateCheckInTable();

        model2.setRowCount(0);
        populateCheckOutTable();  
    }//GEN-LAST:event_ckeckInBtnActionPerformed

    private void checkOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutBtnActionPerformed
        // TODO add your handling code here:
        String client = checkOutNameComboBox.getSelectedItem().toString();
        String book = checkOutComboBoxBook.getSelectedItem().toString();
        String status = "Student";

        String dates = new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()));

        withDrowBook = new WithDrowBook(book, client, status, dates);
        try {
            checkoutDao.save(withDrowBook);
            JOptionPane.showMessageDialog(null, "Saved To Book Withrow List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Student Have Other Book !!!!", "Database Error", JOptionPane.QUESTION_MESSAGE);
        }
        model2.setRowCount(0);
        populateCheckOutTable();

        // Reflesh ComboBox For Check in
        populateComboBoxBookNameForCheckIn();
        populateComboBoxBookForCheckIn();
    }//GEN-LAST:event_checkOutBtnActionPerformed

    private void btnExportExcelCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelCheckInActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF STUDENT RETURNED BOOK");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            CheckInTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_btnExportExcelCheckInActionPerformed

    private void exportWithDrowBooktoexcellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportWithDrowBooktoexcellActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model2.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model2.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model2.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_exportWithDrowBooktoexcellActionPerformed

    private void btnExportPDFCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPDFCheckInActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_btnExportPDFCheckInActionPerformed

    private void BtnExportPdfCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExportPdfCheckOutActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF STUDENT DIDN'T RETURNED BOOK");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            checkOutTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_BtnExportPdfCheckOutActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String client = seachFieldCheckin.getText();
        try{
            checkinDao.searClient(client);
            JOptionPane.showMessageDialog(null, client+ " Does Not Exist In Our Client", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, client +" Haven't Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SearchBtnCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnCheckinActionPerformed
        // TODO add your handling code here:
        String client = seachFieldCheckin.getText();
        try{
            checkinDao.searClient(client);
            JOptionPane.showMessageDialog(null, client+ " Had Been Returned Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, client + " Haven't Returned Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_SearchBtnCheckinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnExportPdfCheckOut;
    private javax.swing.JTable CheckInTable;
    private javax.swing.JButton SearchBtnCheckin;
    private javax.swing.JButton btnExportExcelCheckIn;
    private javax.swing.JButton btnExportPDFCheckIn;
    private javax.swing.JComboBox<String> checkInBookComboBox;
    private javax.swing.JComboBox<String> checkInNameComboBox;
    private javax.swing.JButton checkOutBtn;
    private javax.swing.JComboBox<String> checkOutComboBoxBook;
    private javax.swing.JComboBox checkOutNameComboBox;
    private javax.swing.JTable checkOutTable;
    private javax.swing.JButton ckeckInBtn;
    private javax.swing.JButton exportWithDrowBooktoexcell;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField seachFieldCheckin;
    private javax.swing.JTextField searchForcheckOut;
    // End of variables declaration//GEN-END:variables
}
